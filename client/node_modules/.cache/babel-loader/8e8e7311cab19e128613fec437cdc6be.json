{"ast":null,"code":"import { FORM_ERROR, GET_FORMS, GET_FORM, ADD_FORM, ADD_COMPANY, GET_COMPANIES, ADD_RESPONSE, ADD_QUESTIONS, GET_QUESTIONS, GET_RESPONSES, REMOVE_FORM, GET_COMPANY_FORMS, GET_COMPANY, REMOVE_COMPANY, GET_RESPONSE, REMOVE_RESPONSE } from \"../actions/types\";\nconst initialState = {\n  forms: [],\n  form: null,\n  loading: true,\n  error: {}\n};\n\nconst formReducer = (state = initialState, action) => {\n  const {\n    payload,\n    type\n  } = action;\n\n  switch (type) {\n    case FORM_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case GET_COMPANIES:\n    case GET_COMPANY_FORMS:\n    case GET_RESPONSES:\n    case GET_QUESTIONS:\n    case GET_COMPANY:\n    case GET_FORMS:\n    case GET_RESPONSE:\n      return { ...state,\n        forms: payload,\n        loading: false\n      };\n\n    case GET_FORM:\n      return { ...state,\n        form: payload,\n        loading: false\n      };\n\n    case ADD_COMPANY:\n    case ADD_FORM:\n      return { ...state,\n        forms: [...state.forms, payload],\n        loading: false\n      };\n\n    case ADD_RESPONSE:\n    case ADD_QUESTIONS:\n      return { ...state,\n        form: { ...state.form,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_FORM:\n    case REMOVE_RESPONSE:\n    case REMOVE_COMPANY:\n      return { ...state,\n        forms: state.forms.filter(form => form._id !== payload),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/reducers/formReducer.js"],"names":["FORM_ERROR","GET_FORMS","GET_FORM","ADD_FORM","ADD_COMPANY","GET_COMPANIES","ADD_RESPONSE","ADD_QUESTIONS","GET_QUESTIONS","GET_RESPONSES","REMOVE_FORM","GET_COMPANY_FORMS","GET_COMPANY","REMOVE_COMPANY","GET_RESPONSE","REMOVE_RESPONSE","initialState","forms","form","loading","error","formReducer","state","action","payload","type","comments","filter","_id"],"mappings":"AAAA,SACEA,UADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,aANF,EAOEC,YAPF,EAQEC,aARF,EASEC,aATF,EAUEC,aAVF,EAWEC,WAXF,EAYEC,iBAZF,EAaEC,WAbF,EAcEC,cAdF,EAeEC,YAfF,EAgBEC,eAhBF,QAiBO,kBAjBP;AAmBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,MAA1B;;AAEA,UAAQE,IAAR;AACE,SAAKzB,UAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELF,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKd,aAAL;AACA,SAAKM,iBAAL;AACA,SAAKF,aAAL;AACA,SAAKD,aAAL;AACA,SAAKI,WAAL;AACA,SAAKX,SAAL;AACA,SAAKa,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,KAAK,EAAEO,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKjB,QAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELJ,QAAAA,IAAI,EAAEM,OAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKf,WAAL;AACA,SAAKD,QAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELL,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBO,OAAjB,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKb,YAAL;AACA,SAAKC,aAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELJ,QAAAA,IAAI,EAAE,EAAE,GAAGI,KAAK,CAACJ,IAAX;AAAiBQ,UAAAA,QAAQ,EAAEF;AAA3B,SAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,WAAL;AACA,SAAKK,eAAL;AACA,SAAKF,cAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYU,MAAZ,CAAoBT,IAAD,IAAUA,IAAI,CAACU,GAAL,KAAaJ,OAA1C,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOG,KAAP;AAhDJ;AAkDD,CArDD","sourcesContent":["import {\r\n  FORM_ERROR,\r\n  GET_FORMS,\r\n  GET_FORM,\r\n  ADD_FORM,\r\n  ADD_COMPANY,\r\n  GET_COMPANIES,\r\n  ADD_RESPONSE,\r\n  ADD_QUESTIONS,\r\n  GET_QUESTIONS,\r\n  GET_RESPONSES,\r\n  REMOVE_FORM,\r\n  GET_COMPANY_FORMS,\r\n  GET_COMPANY,\r\n  REMOVE_COMPANY,\r\n  GET_RESPONSE,\r\n  REMOVE_RESPONSE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  forms: [],\r\n  form: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case FORM_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case GET_COMPANIES:\r\n    case GET_COMPANY_FORMS:\r\n    case GET_RESPONSES:\r\n    case GET_QUESTIONS:\r\n    case GET_COMPANY:\r\n    case GET_FORMS:\r\n    case GET_RESPONSE:\r\n      return {\r\n        ...state,\r\n        forms: payload,\r\n        loading: false,\r\n      };\r\n    case GET_FORM:\r\n      return {\r\n        ...state,\r\n        form: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_COMPANY:\r\n    case ADD_FORM:\r\n      return {\r\n        ...state,\r\n        forms: [...state.forms, payload],\r\n        loading: false,\r\n      };\r\n    case ADD_RESPONSE:\r\n    case ADD_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        form: { ...state.form, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_FORM:\r\n    case REMOVE_RESPONSE:\r\n    case REMOVE_COMPANY:\r\n      return {\r\n        ...state,\r\n        forms: state.forms.filter((form) => form._id !== payload),\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}