{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = ({\n  auth,\n  addLike,\n  deletePost,\n  removeLike,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions,\n  profile\n}) => {\n  var singleProfile;\n  singleProfile = profile ? singleProfile = profile.filter(x => x.user._id === user) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/profile/${user}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"round-img\",\n          src: profile !== undefined && singleProfile[0] && singleProfile[0].profileImg ? singleProfile[0].profileImg : avatar,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-date\",\n        children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"YYYY/MM/DD\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: e => addLike(_id),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-thumbs-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes && likes.length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: likes.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 80\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: e => removeLike(_id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-thumbs-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${_id}`,\n          className: \"btn btn-primary\",\n          children: [\"Discussion \", comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-count\",\n            children: [\" \", comments.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => deletePost(_id),\n          type: \"button\",\n          className: \"btn btn-danger\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  addLike: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","profile","singleProfile","filter","x","undefined","profileImg","e","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  addLike,\r\n  deletePost,\r\n  removeLike,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n  profile,\r\n}) => {\r\n  var singleProfile;\r\n  singleProfile = profile ? (singleProfile = profile.filter((x) => x.user._id === user)) : null;\r\n  return (\r\n    <div className=\"post bg-white\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img\r\n            className=\"round-img\"\r\n            src={\r\n              profile !== undefined && singleProfile[0] && singleProfile[0].profileImg\r\n                ? singleProfile[0].profileImg\r\n                : avatar\r\n            }\r\n            alt=\"avatar\"\r\n          />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p>{text}</p>\r\n        <p className=\"post-date\">\r\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n        </p>\r\n        {showActions && (\r\n          <Fragment>\r\n            <button type=\"button\" className=\"btn btn-light\" onClick={(e) => addLike(_id)}>\r\n              <i className=\"fas fa-thumbs-up\"></i>{' '}\r\n              <span>{likes && likes.length > 0 ? <span>{likes.length}</span> : <span></span>}</span>\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\" onClick={(e) => removeLike(_id)}>\r\n              <i className=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n              Discussion {comments.length > 0 && <span className=\"comment-count\"> {comments.length}</span>}\r\n            </Link>\r\n            {!auth.loading && user === auth.user._id && (\r\n              <button onClick={(e) => deletePost(_id)} type=\"button\" className=\"btn btn-danger\">\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n})(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}