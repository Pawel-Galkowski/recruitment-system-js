{"ast":null,"code":"var _jsxFileName = \"F:\\\\in\\u017Cynierka-projekt-18.07\\\\joinjobs\\\\client\\\\src\\\\components\\\\form\\\\CompanyForm.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCompanyForms } from \"../../actions/form\";\nimport { Link } from \"react-router-dom\";\nimport CompanyForms from \"./CompanyForms\";\nimport Spinner from \"../layout/Spinner\";\n\nconst CompanyForm = ({\n  auth,\n  getCompanyForms,\n  forms: {\n    forms,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getCompanyForms(match.params.company);\n  }, [getCompanyForms, match]);\n  return loading || !forms || !auth.user ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"paddingSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, forms.admins && forms.admins.includes(auth.user._id) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mobile-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/api/forms/create/${match.params.company}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Create new form\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginTop-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Actually forms:\"), !forms.formTable || forms.formTable.length < 1 ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"No forms available\") : forms.formTable.map(form => /*#__PURE__*/React.createElement(CompanyForms, {\n    key: form._id,\n    formTable: form,\n    company: match.params.company,\n    admins: forms.admins,\n    name: forms.company,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }))));\n};\n\nCompanyForm.propTypes = {\n  getCompanyForms: PropTypes.func.isRequired,\n  forms: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  forms: state.forms,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getCompanyForms\n})(CompanyForm);","map":{"version":3,"sources":["F:/inÅ¼ynierka-projekt-18.07/joinjobs/client/src/components/form/CompanyForm.js"],"names":["React","useEffect","PropTypes","connect","getCompanyForms","Link","CompanyForms","Spinner","CompanyForm","auth","forms","loading","match","params","company","user","admins","includes","_id","formTable","length","map","form","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCompanyForms } from \"../../actions/form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CompanyForms from \"./CompanyForms\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst CompanyForm = ({\r\n  auth,\r\n  getCompanyForms,\r\n  forms: { forms, loading },\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getCompanyForms(match.params.company);\r\n  }, [getCompanyForms, match]);\r\n\r\n  return loading || !forms || !auth.user ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div className=\"paddingSection\">\r\n      {forms.admins && forms.admins.includes(auth.user._id) ? (\r\n        <div className=\"mobile-center\">\r\n          <Link\r\n            to={`/api/forms/create/${match.params.company}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Create new form\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className=\"marginTop-2\">\r\n        <h2>Actually forms:</h2>\r\n        {!forms.formTable || forms.formTable.length < 1 ? (\r\n          <h2>No forms available</h2>\r\n        ) : (\r\n          forms.formTable.map((form) => (\r\n            <CompanyForms\r\n              key={form._id}\r\n              formTable={form}\r\n              company={match.params.company}\r\n              admins={forms.admins}\r\n              name={forms.company}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCompanyForm.propTypes = {\r\n  getCompanyForms: PropTypes.func.isRequired,\r\n  forms: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  forms: state.forms,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCompanyForms })(CompanyForm);\r\n"]},"metadata":{},"sourceType":"module"}