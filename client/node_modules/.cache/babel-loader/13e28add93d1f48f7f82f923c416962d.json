{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\dashboard\\\\Admin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles, getUsers, getAllusers } from '../../actions/profile';\nimport { getPosts } from '../../actions/post';\nimport AdminPosts from '../admin/LastPosts';\nimport AdminProfiles from '../admin/LastProfiles';\nimport AddUsers from '../admin/AddUsers';\nimport AdminUsers from '../admin/LastUsers';\nimport AllUsers from '../admin/AllUsers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst propComparator = propName => (a, b) => a[propName] === b[propName] ? 0 : a[propName] < b[propName] ? -1 : 1;\n\nconst Admin = ({\n  profile: {\n    profiles,\n    profile,\n    users2,\n    allUsers,\n    loading\n  },\n  getPosts,\n  post: {\n    posts\n  },\n  getProfiles,\n  getUsers,\n  getAllusers\n}) => {\n  _s();\n\n  useEffect(() => {\n    getPosts();\n    getProfiles();\n    getUsers();\n    getAllusers();\n  }, [getPosts, getProfiles, getUsers, getAllusers]);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paddingSection\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"row-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inside-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"box-header\",\n                children: \"Last added profiles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), profiles === undefined ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this) : profiles.map(profile => /*#__PURE__*/_jsxDEV(AdminProfiles, {\n                profile: profile\n              }, profile._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 39\n              }, this)).sort(propComparator('date')).slice(0, 5)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inside-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"box-header\",\n                children: \"Last added posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), posts === undefined ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(AdminPosts, {\n                post: post\n              }, post._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 36\n              }, this)).sort(propComparator('date')).slice(0, 5)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"row-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inside-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"box-header\",\n                children: \"Last added users without profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), users2 === undefined ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n                children: users2.map(usrs => /*#__PURE__*/_jsxDEV(AdminUsers, {\n                  usrs: usrs\n                }, usrs._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 38\n                }, this)).sort(propComparator('date')).slice(0, 5)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inside-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"box-header\",\n                children: \"Add user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AddUsers, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"row-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inside-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"box-header\",\n                children: \"All Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), allUsers === undefined ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n                children: allUsers.map(usrs => /*#__PURE__*/_jsxDEV(AllUsers, {\n                  usrs: usrs\n                }, usrs._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 38\n                }, this)).sort(propComparator('date')).slice(0, 5)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inside-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"box-header\",\n                children: \"Not added yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Admin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Admin;\nAdmin.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  getAllusers: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  getProfiles: PropTypes.func.isRequired,\n  getUsers: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts,\n  getProfiles,\n  getUsers,\n  getAllusers\n})(Admin);\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/dashboard/Admin.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","getProfiles","getUsers","getAllusers","getPosts","AdminPosts","AdminProfiles","AddUsers","AdminUsers","AllUsers","propComparator","propName","a","b","Admin","profile","profiles","users2","allUsers","loading","post","posts","undefined","map","_id","sort","slice","usrs","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfiles, getUsers, getAllusers } from '../../actions/profile';\r\nimport { getPosts } from '../../actions/post';\r\nimport AdminPosts from '../admin/LastPosts';\r\nimport AdminProfiles from '../admin/LastProfiles';\r\nimport AddUsers from '../admin/AddUsers';\r\nimport AdminUsers from '../admin/LastUsers';\r\nimport AllUsers from '../admin/AllUsers';\r\n\r\nconst propComparator = (propName) => (a, b) => a[propName] === b[propName] ? 0 : a[propName] < b[propName] ? -1 : 1;\r\n\r\nconst Admin = ({\r\n  profile: { profiles, profile, users2, allUsers, loading },\r\n  getPosts,\r\n  post: { posts },\r\n  getProfiles,\r\n  getUsers,\r\n  getAllusers,\r\n}) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n    getProfiles();\r\n    getUsers();\r\n    getAllusers();\r\n  }, [getPosts, getProfiles, getUsers, getAllusers]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className=\"paddingSection\">\r\n        <section className=\"flex-column\">\r\n          <article className=\"row-100\">\r\n            <div className=\"admin-box\">\r\n              <div className=\"inside-box\">\r\n                <h2 className=\"box-header\">Last added profiles</h2>\r\n                {profiles === undefined ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  profiles\r\n                    .map((profile) => <AdminProfiles key={profile._id} profile={profile} />)\r\n                    .sort(propComparator('date'))\r\n                    .slice(0, 5)\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"admin-box\">\r\n              <div className=\"inside-box\">\r\n                <h2 className=\"box-header\">Last added posts</h2>\r\n                {posts === undefined ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  posts\r\n                    .map((post) => <AdminPosts key={post._id} post={post} />)\r\n                    .sort(propComparator('date'))\r\n                    .slice(0, 5)\r\n                )}\r\n              </div>\r\n            </div>\r\n          </article>\r\n          <article className=\"row-100\">\r\n            <div className=\"admin-box\">\r\n              <div className=\"inside-box\">\r\n                <h2 className=\"box-header\">Last added users without profile</h2>\r\n                {users2 === undefined ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  <Fragment>\r\n                    {users2\r\n                      .map((usrs) => <AdminUsers key={usrs._id} usrs={usrs} />)\r\n                      .sort(propComparator('date'))\r\n                      .slice(0, 5)}\r\n                  </Fragment>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"admin-box\">\r\n              <div className=\"inside-box\">\r\n                <h2 className=\"box-header\">Add user</h2>\r\n                <AddUsers />\r\n              </div>\r\n            </div>\r\n          </article>\r\n          <article className=\"row-100\">\r\n            <div className=\"admin-box\">\r\n              <div className=\"inside-box\">\r\n                <h2 className=\"box-header\">All Users</h2>\r\n                {allUsers === undefined ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  <Fragment>\r\n                    {allUsers\r\n                      .map((usrs) => <AllUsers key={usrs._id} usrs={usrs} />)\r\n                      .sort(propComparator('date'))\r\n                      .slice(0, 5)}\r\n                  </Fragment>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"admin-box\">\r\n              <div className=\"inside-box\">\r\n                <h2 className=\"box-header\">Not added yet</h2>\r\n                <Spinner />\r\n              </div>\r\n            </div>\r\n          </article>\r\n        </section>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAdmin.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  getPosts: PropTypes.func.isRequired,\r\n  getAllusers: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  getProfiles: PropTypes.func.isRequired,\r\n  getUsers: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getPosts,\r\n  getProfiles,\r\n  getUsers,\r\n  getAllusers,\r\n})(Admin);\r\n"]},"metadata":{},"sourceType":"module"}