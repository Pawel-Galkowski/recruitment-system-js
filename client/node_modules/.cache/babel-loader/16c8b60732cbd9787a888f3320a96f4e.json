{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  auth,\n  addLike,\n  deletePost,\n  removeLike,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions,\n  profile\n}) => {\n  var singleProfile;\n  singleProfile = profile ? singleProfile = profile.filter(x => x.user._id === user) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${user}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"round-img\",\n    src: profile !== undefined && singleProfile[0] && singleProfile[0].profileImg ? singleProfile[0].profileImg : avatar,\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, date)), showActions && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: e => addLike(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, likes && likes.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, likes.length) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: e => removeLike(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/posts/${_id}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Discussion\", \" \", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \" \", comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => deletePost(_id),\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })))));\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  addLike: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","profile","singleProfile","filter","x","undefined","profileImg","e","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  addLike,\r\n  deletePost,\r\n  removeLike,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n  profile,\r\n}) => {\r\n  var singleProfile;\r\n  singleProfile = profile\r\n    ? (singleProfile = profile.filter((x) => x.user._id === user))\r\n    : null;\r\n  return (\r\n    <div className=\"post bg-white\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img\r\n            className=\"round-img\"\r\n            src={\r\n              profile !== undefined && singleProfile[0] && singleProfile[0].profileImg\r\n                ? singleProfile[0].profileImg\r\n                : avatar\r\n            }\r\n            alt=\"avatar\"\r\n          />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p>{text}</p>\r\n        <p className=\"post-date\">\r\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n        </p>\r\n        {showActions && (\r\n          <Fragment>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n              onClick={(e) => addLike(_id)}\r\n            >\r\n              <i className=\"fas fa-thumbs-up\"></i>{\" \"}\r\n              <span>\r\n                {likes && likes.length > 0 ? (\r\n                  <span>{likes.length}</span>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n              </span>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n              onClick={(e) => removeLike(_id)}\r\n            >\r\n              <i className=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n              Discussion{\" \"}\r\n              {comments.length > 0 && (\r\n                <span className=\"comment-count\"> {comments.length}</span>\r\n              )}\r\n            </Link>\r\n            {!auth.loading && user === auth.user._id && (\r\n              <button\r\n                onClick={(e) => deletePost(_id)}\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n              >\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n})(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}