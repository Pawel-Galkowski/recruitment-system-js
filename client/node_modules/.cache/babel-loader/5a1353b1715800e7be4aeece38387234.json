{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\form\\\\SingleFormResponse.js\";\nimport React, { useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./../layout/Spinner\";\nimport { getForm } from \"../../actions/form\";\nimport FormResponse from \"./FormResponse\";\n\nconst SingleFormResponse = ({\n  auth: {\n    loading\n  },\n  getForm,\n  forms: {\n    form\n  },\n  match\n}) => {\n  useEffect(() => {\n    getForm(match.params.company, match.params.id);\n  }, [getForm, match]);\n  return loading || !form ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"paddingSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Responses to form \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Questions:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sectionLeftPadding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, form.questions && form.questions.map((ask, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }, ask)))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Responses:\"), form.responses && form.responses.map(form => /*#__PURE__*/React.createElement(Fragment, {\n    key: form._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \" \", form._id === match.params.response ? /*#__PURE__*/React.createElement(FormResponse, {\n    form: form,\n    match: match,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })))));\n};\n\nSingleFormResponse.propTypes = {\n  getForm: PropTypes.func.isRequired,\n  forms: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  forms: state.forms\n});\n\nexport default connect(mapStateToProps, {\n  getForm\n})(SingleFormResponse);","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/form/SingleFormResponse.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","getForm","FormResponse","SingleFormResponse","auth","loading","forms","form","match","params","company","id","questions","map","ask","index","responses","_id","response","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"./../layout/Spinner\";\r\nimport { getForm } from \"../../actions/form\";\r\nimport FormResponse from \"./FormResponse\";\r\n\r\nconst SingleFormResponse = ({\r\n  auth: { loading },\r\n  getForm,\r\n  forms: { form },\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getForm(match.params.company, match.params.id);\r\n  }, [getForm, match]);\r\n  return loading || !form ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div className=\"paddingSection\">\r\n      <h1>Responses to form </h1>\r\n      <div>\r\n        <hr />\r\n        <h2>Questions:</h2>\r\n        <div className=\"sectionLeftPadding\">\r\n          <ol>\r\n            {form.questions &&\r\n              form.questions.map((ask, index) => (\r\n                <Fragment key={index}>\r\n                  <li>{ask}</li>\r\n                </Fragment>\r\n              ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <hr />\r\n        <h2>Responses:</h2>\r\n        {form.responses &&\r\n          form.responses.map((form) => (\r\n            <Fragment key={form._id}>\r\n              {\" \"}\r\n              {form._id === match.params.response ? (\r\n                <FormResponse form={form} match={match} />\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </Fragment>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSingleFormResponse.propTypes = {\r\n  getForm: PropTypes.func.isRequired,\r\n  forms: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  forms: state.forms,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getForm })(SingleFormResponse);\r\n"]},"metadata":{},"sourceType":"module"}