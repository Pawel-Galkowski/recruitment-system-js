{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\admin\\\\LastPosts.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Momment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { deletePost } from \"../../actions/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = ({\n  auth,\n  deletePost,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    comments,\n    date,\n    loading\n  },\n  showActions\n}) => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-users bg-white p-1 my-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/profile/${user}`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"round-img\",\n              src: avatar,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"my-1\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-date\",\n            children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Momment, {\n              format: \"YYYY/MM/DD\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/${_id}`,\n              className: \"btn btn-primary\",\n              children: [\"Discussion\", \" \", comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comment-count\",\n                children: [\" \", comments.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 11\n            }, this), !auth.loading && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => deletePost(_id),\n              type: \"button\",\n              className: \"btn btn-danger\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/admin/LastPosts.js"],"names":["React","Fragment","PropTypes","Link","Momment","connect","Spinner","deletePost","PostItem","auth","post","_id","text","name","avatar","user","comments","date","loading","showActions","length","e","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Momment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  deletePost,\r\n  post: { _id, text, name, avatar, user, comments, date, loading },\r\n  showActions\r\n}) => {\r\n  return ( \r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n  <div className=\"post-users bg-white p-1 my-4\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"avatar\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">\r\n        Posted on <Momment format=\"YYYY/MM/DD\">{date}</Momment>\r\n      </p>\r\n      {showActions && (\r\n        <Fragment>\r\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span className=\"comment-count\"> {comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && (\r\n            <button\r\n              onClick={e => deletePost(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n  </Fragment>\r\n  )}\r\n  </Fragment>\r\n  )\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deletePost })(\r\n  PostItem\r\n);\r\n"]},"metadata":{},"sourceType":"module"}