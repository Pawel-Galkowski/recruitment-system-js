{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\admin\\\\AllUsers.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { deleteUserAccount } from '../../actions/profile';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminUsers = ({\n  usrs: {\n    confirmed,\n    _id,\n    name,\n    email,\n    date,\n    role,\n    loading\n  },\n  deleteUserAccount\n}) => {\n  let adminDanger = false;\n  const normalDate = date.substring(0, 10);\n  const timeDate = date.substring(11, 16);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white padding2 margin-2ud\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [name, \" -\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), role === 'admin' ? adminDanger = true : adminDanger = false, adminDanger ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dangerRole\",\n              children: [\" \", role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"margin-2ud\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Creation date: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: normalDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Confirmation:\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n              children: confirmed ? confirmed.toString() : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dangerRole\",\n                children: confirmed.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Creation time: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: timeDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: e => deleteUserAccount(_id),\n          type: \"button\",\n          children: \"Delete Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AdminUsers;\nAdminUsers.propTypes = {\n  deleteUserAccount: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deleteUserAccount\n})(AdminUsers);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUsers\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/admin/AllUsers.js"],"names":["React","Fragment","PropTypes","deleteUserAccount","connect","Spinner","AdminUsers","usrs","confirmed","_id","name","email","date","role","loading","adminDanger","normalDate","substring","timeDate","toString","e","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteUserAccount } from '../../actions/profile';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst AdminUsers = ({ usrs: { confirmed, _id, name, email, date, role, loading }, deleteUserAccount }) => {\r\n  let adminDanger = false;\r\n  const normalDate = date.substring(0, 10);\r\n  const timeDate = date.substring(11, 16);\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"bg-white padding2 margin-2ud\">\r\n            <h3>\r\n              <strong>{name} -</strong>\r\n              {role === 'admin' ? (adminDanger = true) : (adminDanger = false)}\r\n              {adminDanger ? (\r\n                <Fragment>\r\n                  <span className=\"dangerRole\"> {role}</span>\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <span> {role}</span>\r\n                </Fragment>\r\n              )}\r\n            </h3>\r\n            <div className=\"margin-2ud\">\r\n              <p>\r\n                Email: <b>{email}</b>\r\n              </p>\r\n              <p>\r\n                Creation date: <b>{normalDate}</b>\r\n              </p>\r\n              <p>\r\n                Confirmation:{' '}\r\n                <b>{confirmed ? confirmed.toString() : <span className=\"dangerRole\">{confirmed.toString()}</span>}</b>\r\n              </p>\r\n              <p>\r\n                Creation time: <b>{timeDate}</b>\r\n              </p>\r\n            </div>\r\n            <button className=\"btn btn-danger\" onClick={(e) => deleteUserAccount(_id)} type=\"button\">\r\n              Delete Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAdminUsers.propTypes = {\r\n  deleteUserAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteUserAccount })(AdminUsers);\r\n"]},"metadata":{},"sourceType":"module"}