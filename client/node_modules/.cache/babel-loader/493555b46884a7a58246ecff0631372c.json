{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\pages\\\\profile\\\\EditExperience.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentExperience, setCurrentExperience } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditExperience = ({\n  getCurrentExperience,\n  setCurrentExperience,\n  profile: {\n    profile,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    title: '',\n    location: '',\n    company: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  });\n  const [toDateDisabled, toggleDisabled] = useState(false);\n  /*eslint-disable */\n\n  useEffect(() => {\n    getCurrentExperience(match.params.id);\n    const dateFrom = loading || !profile.from ? '' : profile.from;\n    const dateTo = loading || !profile.to ? '' : profile.to;\n    setFormData({\n      title: loading || !profile.title ? '' : profile.title,\n      location: loading || !profile.location ? '' : profile.location,\n      company: loading || !profile.company ? '' : profile.company,\n      from: loading || !dateFrom.substring(0, 10) ? '' : dateFrom.substring(0, 10),\n      to: loading || !dateTo.substring(0, 10) ? '' : dateTo.substring(0, 10),\n      current: loading || !profile.current ? '' : profile.current,\n      description: loading || !profile.description ? '' : profile.description\n    });\n  }, []);\n  /*eslint-enable */\n\n  const {\n    title,\n    location,\n    company,\n    from,\n    to,\n    current,\n    description\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setCurrentExperience(match.params.id, formData);\n  };\n\n  return loading || !profile ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paddingSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \" Change Your experience \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \" Let's get some information to make your experience stand out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \" * = required field \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: e => onSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"* title or Bootcamp\",\n            name: \"title\",\n            value: title,\n            required: true,\n            onChange: e => onChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Location\",\n            name: \"location\",\n            value: location,\n            onChange: e => onChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text\",\n            children: \"City & state suggested (eg. Boston, MA)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"company\",\n            name: \"company\",\n            value: company,\n            onChange: e => onChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" From Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"from\",\n            value: from,\n            onChange: e => onChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" To Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"to\",\n            value: to,\n            onChange: e => onChange(e),\n            disabled: toDateDisabled ? 'disabled' : 'enabled'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"current\",\n              value: current,\n              checked: current,\n              onChange: e => {\n                setFormData({ ...formData,\n                  current: !current\n                });\n                toggleDisabled(!toDateDisabled);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), \"Current Job\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            cols: \"30\",\n            rows: \"5\",\n            placeholder: \"Program Description\",\n            value: description,\n            onChange: e => onChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-light my-1\",\n          to: \"/dashboard\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditExperience, \"x/GqG5pNDpGWi3wvtv6bJ34Ldnc=\");\n\n_c = EditExperience;\nEditExperience.propTypes = {\n  getCurrentExperience: PropTypes.func.isRequired,\n  setCurrentExperience: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentExperience,\n  setCurrentExperience\n})(EditExperience);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditExperience\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/pages/profile/EditExperience.js"],"names":["React","useState","Fragment","useEffect","PropTypes","connect","Link","Spinner","getCurrentExperience","setCurrentExperience","EditExperience","profile","loading","match","formData","setFormData","title","location","company","from","to","current","description","toDateDisabled","toggleDisabled","params","id","dateFrom","dateTo","substring","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getCurrentExperience, setCurrentExperience } from '../../actions/profile';\r\n\r\nconst EditExperience = ({ getCurrentExperience, setCurrentExperience, profile: { profile, loading }, match }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    location: '',\r\n    company: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  /*eslint-disable */\r\n  useEffect(() => {\r\n    getCurrentExperience(match.params.id);\r\n    const dateFrom = loading || !profile.from ? '' : profile.from;\r\n    const dateTo = loading || !profile.to ? '' : profile.to;\r\n    setFormData({\r\n      title: loading || !profile.title ? '' : profile.title,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      from: loading || !dateFrom.substring(0, 10) ? '' : dateFrom.substring(0, 10),\r\n      to: loading || !dateTo.substring(0, 10) ? '' : dateTo.substring(0, 10),\r\n      current: loading || !profile.current ? '' : profile.current,\r\n      description: loading || !profile.description ? '' : profile.description,\r\n    });\r\n  }, []);\r\n  /*eslint-enable */\r\n\r\n  const { title, location, company, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setCurrentExperience(match.params.id, formData);\r\n  };\r\n\r\n  return loading || !profile ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className=\"paddingSection\">\r\n        <h1 className=\"large text-primary\"> Change Your experience </h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"> </i> Let's get some information to make your experience stand out\r\n        </p>\r\n        <small> * = required field </small>\r\n        <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"* title or Bootcamp\"\r\n              name=\"title\"\r\n              value={title}\r\n              required\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e) => onChange(e)} />\r\n            <small className=\"form-text\">City & state suggested (eg. Boston, MA)</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"company\" name=\"company\" value={company} onChange={(e) => onChange(e)} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4> From Date </h4>\r\n            <input type=\"date\" name=\"from\" value={from} onChange={(e) => onChange(e)} required />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4> To Date </h4>\r\n            <input\r\n              type=\"date\"\r\n              name=\"to\"\r\n              value={to}\r\n              onChange={(e) => onChange(e)}\r\n              disabled={toDateDisabled ? 'disabled' : 'enabled'}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <p>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"current\"\r\n                value={current}\r\n                checked={current}\r\n                onChange={(e) => {\r\n                  setFormData({ ...formData, current: !current });\r\n                  toggleDisabled(!toDateDisabled);\r\n                }}\r\n              />\r\n              Current Job\r\n            </p>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              name=\"description\"\r\n              cols=\"30\"\r\n              rows=\"5\"\r\n              placeholder=\"Program Description\"\r\n              value={description}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n          <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n            Go Back\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditExperience.propTypes = {\r\n  getCurrentExperience: PropTypes.func.isRequired,\r\n  setCurrentExperience: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCurrentExperience,\r\n  setCurrentExperience,\r\n})(EditExperience);\r\n"]},"metadata":{},"sourceType":"module"}