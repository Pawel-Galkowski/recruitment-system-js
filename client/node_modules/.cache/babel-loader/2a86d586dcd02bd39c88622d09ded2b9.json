{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_PROFILES, GET_EXPERIENCE, GET_EDUCATION, GET_REPOS, POST_EXPERIENCE, ACCOUNT_DELETED2, CLEAR_USERS, GET_USERS, USERS_ERROR, POST_EDUCATION, ALL_USERS // POST_FILE,\n} from \"./types\";\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getCurrentExperience = ExpId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/experience/${ExpId}`);\n    dispatch({\n      type: GET_EXPERIENCE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const setCurrentExperience = (ExpId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/profile/experience/${ExpId}`, formData, config);\n    dispatch({\n      type: POST_EXPERIENCE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getCurrentEducation = EduId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/education/${EduId}`);\n    dispatch({\n      type: GET_EDUCATION,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const setCurrentEducation = (EduId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/profile/education/${EduId}`, formData, config);\n    dispatch({\n      type: POST_EDUCATION,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const getUsers = () => async dispatch => {\n  dispatch({\n    type: CLEAR_USERS\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile/getusers\");\n    dispatch({\n      type: GET_USERS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: USERS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getAllusers = () => async dispatch => {\n  dispatch({\n    type: CLEAR_USERS\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile/getAllusers\");\n    dispatch({\n      type: ALL_USERS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: USERS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getProfileById = userId => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const editEducation = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = axios.post(\"/api/profile/education\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Education Added\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = axios.put(\"/api/profile/education\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteUserAccount = userId => async dispatch => {\n  if (window.confirm(\"Are you sure?\")) {\n    try {\n      await axios.delete(`/api/profile/${userId}`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED2\n      });\n      dispatch(setAlert(\"Account permamently deleted\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(\"Are you sure?\")) {\n    try {\n      await axios.delete(`/api/profile/`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert(\"Account permamently deleted\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","GET_PROFILES","GET_EXPERIENCE","GET_EDUCATION","GET_REPOS","POST_EXPERIENCE","ACCOUNT_DELETED2","CLEAR_USERS","GET_USERS","USERS_ERROR","POST_EDUCATION","ALL_USERS","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getCurrentExperience","ExpId","setCurrentExperience","formData","config","headers","post","getCurrentEducation","EduId","setCurrentEducation","getProfiles","getUsers","getAllusers","getProfileById","userId","getGithubRepos","username","createProfile","history","edit","push","errors","forEach","error","addExperience","put","editEducation","addEducation","deleteExperience","id","delete","deleteEducation","deleteUserAccount","window","confirm","deleteAccount"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_PROFILES,\r\n  GET_EXPERIENCE,\r\n  GET_EDUCATION,\r\n  GET_REPOS,\r\n  POST_EXPERIENCE,\r\n  ACCOUNT_DELETED2,\r\n  CLEAR_USERS,\r\n  GET_USERS,\r\n  USERS_ERROR,\r\n  POST_EDUCATION,\r\n  ALL_USERS,\r\n  // POST_FILE,\r\n} from \"./types\";\r\n\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCurrentExperience = (ExpId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/experience/${ExpId}`);\r\n\r\n    dispatch({\r\n      type: GET_EXPERIENCE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrentExperience = (ExpId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/profile/experience/${ExpId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: POST_EXPERIENCE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCurrentEducation = (EduId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/education/${EduId}`);\r\n\r\n    dispatch({\r\n      type: GET_EDUCATION,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrentEducation = (EduId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/profile/education/${EduId}`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: POST_EDUCATION,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get(\"/api/profile\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_USERS });\r\n  try {\r\n    const res = await axios.get(\"/api/profile/getusers\");\r\n\r\n    dispatch({\r\n      type: GET_USERS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USERS_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllusers = () => async(dispatch) =>{\r\n  dispatch({ type: CLEAR_USERS });\r\n  try {\r\n    const res = await axios.get(\"/api/profile/getAllusers\");\r\n\r\n    dispatch({\r\n      type: ALL_USERS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USERS_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n}\r\n\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = axios.post(\"/api/profile\", formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\r\n\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = axios.put(\"/api/profile/experience\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Added\", \"success\"));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const editEducation = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = axios.post(\"/api/profile/education\", formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Education Added\", \"success\"));\r\n\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = axios.put(\"/api/profile/education\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Added\", \"success\"));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUserAccount = (userId) => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure?\")) {\r\n    try {\r\n      await axios.delete(`/api/profile/${userId}`);\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n      });\r\n\r\n      dispatch({\r\n        type: ACCOUNT_DELETED2,\r\n      });\r\n\r\n      dispatch(setAlert(\"Account permamently deleted\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure?\")) {\r\n    try {\r\n      await axios.delete(`/api/profile/`);\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n      });\r\n\r\n      dispatch({\r\n        type: ACCOUNT_DELETED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Account permamently deleted\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}