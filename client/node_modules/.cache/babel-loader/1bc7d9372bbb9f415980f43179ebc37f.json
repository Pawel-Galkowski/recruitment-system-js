{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { FORM_ERROR, GET_COMPANIES, GET_FORM, GET_COMPANY, ADD_COMPANY, ADD_FORM, ADD_RESPONSE, GET_QUESTIONS, GET_RESPONSES, GET_RESPONSE, REMOVE_FORM, REMOVE_COMPANY, REMOVE_RESPONSE } from \"./types\";\nexport const addCompany = formData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(\"/api/forms\", formData, config);\n    dispatch({\n      type: ADD_COMPANY,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Company Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const getCompanies = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/forms\");\n    dispatch({\n      type: GET_COMPANIES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const removeCompany = company => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/forms/${company}`);\n    dispatch({\n      type: REMOVE_COMPANY,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const getCompanyForms = company => async dispatch => {\n  try {\n    const res = await axios.get(`/api/forms/${company}`);\n    dispatch({\n      type: GET_COMPANY,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const addCompanyForm = (company, formData) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/forms/${company}`, formData, config);\n    dispatch({\n      type: ADD_FORM,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Form Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const getForm = (company, id) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/forms/${company}/${id}`);\n    dispatch({\n      type: GET_FORM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const removeForm = (company, id) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/forms/${company}/${id}`);\n    dispatch({\n      type: REMOVE_FORM,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Form Removed\", \"success\"));\n  } catch (err) {\n    window.location.reload(true);\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const addResponseToForm = (company, id, formData, fileData) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const responses = {\n      responses: formData,\n      file: fileData\n    };\n    const res = await axios.post(`/api/forms/res/${company}/${id}`, responses, config);\n    dispatch({\n      type: ADD_RESPONSE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Response send\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const getQuestions = (company, id) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/forms/asks/${company}/${id}`);\n    dispatch({\n      type: GET_QUESTIONS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const getResponses = (company, id) => async dispatch => {\n  try {\n    const responses = await axios.get(`/api/forms/res/${company}/${id}`);\n    dispatch({\n      type: GET_RESPONSES,\n      payload: responses.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const getOneResponse = (company, id, res) => async dispatch => {\n  try {\n    const responses = await axios.get(`/api/forms/res/${company}/${id}/${res}`);\n    dispatch({\n      type: GET_RESPONSE,\n      payload: responses.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};\nexport const removeResponse = (company, id, response) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/forms/res/${company}/${id}/${response}`);\n    dispatch({\n      type: REMOVE_RESPONSE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FORM_ERROR,\n      payload: {\n        msg: err.statusText,\n        status: err.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["F:/in≈ºynierka-projekt-18.07/joinjobs/client/src/actions/form.js"],"names":["axios","setAlert","FORM_ERROR","GET_COMPANIES","GET_FORM","GET_COMPANY","ADD_COMPANY","ADD_FORM","ADD_RESPONSE","GET_QUESTIONS","GET_RESPONSES","GET_RESPONSE","REMOVE_FORM","REMOVE_COMPANY","REMOVE_RESPONSE","addCompany","formData","dispatch","config","headers","res","post","type","payload","data","err","msg","statusText","status","getCompanies","get","removeCompany","company","delete","getCompanyForms","addCompanyForm","getForm","id","removeForm","window","location","reload","addResponseToForm","fileData","responses","file","getQuestions","getResponses","getOneResponse","removeResponse","response"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  FORM_ERROR,\r\n  GET_COMPANIES,\r\n  GET_FORM,\r\n  GET_COMPANY,\r\n  ADD_COMPANY,\r\n  ADD_FORM,\r\n  ADD_RESPONSE,\r\n  GET_QUESTIONS,\r\n  GET_RESPONSES,\r\n  GET_RESPONSE,\r\n  REMOVE_FORM,\r\n  REMOVE_COMPANY,\r\n  REMOVE_RESPONSE,\r\n} from \"./types\";\r\n\r\nexport const addCompany = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\"/api/forms\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_COMPANY,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Company Created\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCompanies = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/forms\");\r\n    dispatch({\r\n      type: GET_COMPANIES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeCompany = (company) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/forms/${company}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMPANY,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCompanyForms = (company) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/forms/${company}`);\r\n    dispatch({\r\n      type: GET_COMPANY,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addCompanyForm = (company, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(`/api/forms/${company}`, formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_FORM,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Form Created\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getForm = (company, id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/forms/${company}/${id}`);\r\n    dispatch({\r\n      type: GET_FORM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeForm = (company, id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/forms/${company}/${id}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_FORM,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Form Removed\", \"success\"));\r\n  } catch (err) {\r\n    window.location.reload(true);\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addResponseToForm = (company, id, formData, fileData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const responses = { responses: formData, file: fileData };\r\n\r\n    const res = await axios.post(\r\n      `/api/forms/res/${company}/${id}`,\r\n      responses,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_RESPONSE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Response send\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getQuestions = (company, id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/forms/asks/${company}/${id}`);\r\n    dispatch({\r\n      type: GET_QUESTIONS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getResponses = (company, id) => async (dispatch) => {\r\n  try {\r\n    const responses = await axios.get(`/api/forms/res/${company}/${id}`);\r\n    dispatch({\r\n      type: GET_RESPONSES,\r\n      payload: responses.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOneResponse = (company, id, res) => async (dispatch) => {\r\n  try {\r\n    const responses = await axios.get(`/api/forms/res/${company}/${id}/${res}`);\r\n    dispatch({\r\n      type: GET_RESPONSE,\r\n      payload: responses.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeResponse = (company, id, response) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(\r\n      `/api/forms/res/${company}/${id}/${response}`\r\n    );\r\n\r\n    dispatch({\r\n      type: REMOVE_RESPONSE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FORM_ERROR,\r\n      payload: { msg: err.statusText, status: err.status },\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}