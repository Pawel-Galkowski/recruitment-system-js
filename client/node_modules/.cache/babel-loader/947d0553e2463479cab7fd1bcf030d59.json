{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\auth\\\\Authorize.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { authorize } from \"../../actions/auth\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"../layout/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authorize = ({\n  authorize\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    email: \"\"\n  });\n  const {\n    email\n  } = formData;\n  const fullUrl = window.location.href;\n  const token = fullUrl.replace(/([^]+)confirmation\\//g, \"\");\n\n  const onchange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    authorize(email, token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"additionalBG\",\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user bg-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabs-content\",\n              children: [/*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"register-tab-content\",\n                className: \"active\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"lead\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 21\n                  }, this), \" Write your email to confirm account\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"register-form\",\n                  onSubmit: e => onSubmit(e),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"input\",\n                      type: \"email\",\n                      placeholder: \"Email Address\",\n                      name: \"email\",\n                      value: email,\n                      onChange: e => onchange(e),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 40,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"submit\",\n                    className: \"button-change\",\n                    value: \"Verify\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authorize, \"2Gd4R9Mn8zYlsmC4N+h+S9pykBY=\");\n\n_c = Authorize;\nAuthorize.propTypes = {\n  authorize: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  authorize\n})(Authorize);\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorize\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/auth/Authorize.js"],"names":["React","Fragment","useState","authorize","connect","PropTypes","Alert","Authorize","formData","setFormData","email","fullUrl","window","location","href","token","replace","onchange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACnC,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,KAAK,EAAE;AADgC,GAAD,CAAxC;AAIA,QAAM;AAAEA,IAAAA;AAAF,MAAYF,QAAlB;AACA,QAAMG,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhC;AACA,QAAMC,KAAK,GAAGJ,OAAO,CAACK,OAAR,CAAgB,uBAAhB,EAAyC,EAAzC,CAAd;;AAEA,QAAMC,QAAQ,GAAGC,CAAC,IAChBT,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACU,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,GAAD,CADb;;AAGA,QAAMC,QAAQ,GAAG,MAAMJ,CAAN,IAAW;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AACApB,IAAAA,SAAS,CAACO,KAAD,EAAQK,KAAR,CAAT;AACD,GAHD;;AAKA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,EAAE,EAAC,sBAAR;AAA+B,gBAAA,SAAS,EAAC,QAAzC;AAAA,wCACE;AAAG,kBAAA,SAAS,EAAC,MAAb;AAAA,0CACE;AAAG,oBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,0BADF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAKE;AAAM,kBAAA,SAAS,EAAC,eAAhB;AAAgC,kBAAA,QAAQ,EAAEG,CAAC,IAAII,QAAQ,CAACJ,CAAD,CAAvD;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,2CACE;AACE,sBAAA,SAAS,EAAC,OADZ;AAEE,sBAAA,IAAI,EAAC,OAFP;AAGE,sBAAA,WAAW,EAAC,eAHd;AAIE,sBAAA,IAAI,EAAC,OAJP;AAKE,sBAAA,KAAK,EAAER,KALT;AAME,sBAAA,QAAQ,EAAEQ,CAAC,IAAID,QAAQ,CAACC,CAAD,CANzB;AAOE,sBAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAYE;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,SAAS,EAAC,eAFZ;AAGE,oBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,0BAZF;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CAzDD;;GAAMX,S;;KAAAA,S;AA2DNA,SAAS,CAACiB,SAAV,GAAsB;AACpBrB,EAAAA,SAAS,EAAEE,SAAS,CAACoB,IAAV,CAAeC;AADN,CAAtB;AAIA,eAAetB,OAAO,CAAC,IAAD,EAAO;AAAED,EAAAA;AAAF,CAAP,CAAP,CAA6BI,SAA7B,CAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { authorize } from \"../../actions/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nconst Authorize = ({ authorize }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\"\r\n  });\r\n\r\n  const { email } = formData;\r\n  const fullUrl = window.location.href;\r\n  const token = fullUrl.replace(/([^]+)confirmation\\//g, \"\");\r\n\r\n  const onchange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    authorize(email, token);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"center-box\">\r\n        <div className=\"flex-box\">\r\n          <div className=\"additionalBG\">&nbsp;</div>\r\n          <div className=\"user bg-dark\">\r\n            <div className=\"form-wrap\">\r\n              <div className=\"tabs-content\">\r\n                <Alert />\r\n                <div id=\"register-tab-content\" className=\"active\">\r\n                  <p className=\"lead\">\r\n                    <i className=\"fas fa-user\"></i> Write your email to confirm\r\n                    account\r\n                  </p>\r\n                  <form className=\"register-form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        className=\"input\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={e => onchange(e)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"button-change\"\r\n                      value=\"Verify\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAuthorize.propTypes = {\r\n  authorize: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { authorize })(Authorize);\r\n"]},"metadata":{},"sourceType":"module"}