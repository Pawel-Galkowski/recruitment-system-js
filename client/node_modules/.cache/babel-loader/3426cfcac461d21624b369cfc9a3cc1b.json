{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\form\\\\CompanyForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCompanyForms } from '../../actions/form';\nimport { Link } from 'react-router-dom';\nimport CompanyForms from './CompanyForms';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyForm = ({\n  auth,\n  getCompanyForms,\n  forms: {\n    forms,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCompanyForms(match.params.company);\n  }, [getCompanyForms, match]);\n  return loading || !forms || !auth.user ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paddingSection\",\n    children: [forms.admins && forms.admins.includes(auth.user._id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-center\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/api/forms/create/${match.params.company}`,\n        className: \"btn btn-primary\",\n        children: \"Create new form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marginTop-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Actually forms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), !forms.formTable || forms.formTable.length < 1 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No forms available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : forms.formTable.map(form => /*#__PURE__*/_jsxDEV(CompanyForms, {\n        formTable: form,\n        company: match.params.company,\n        admins: forms.admins,\n        name: forms.company\n      }, form._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanyForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CompanyForm;\nCompanyForm.propTypes = {\n  getCompanyForms: PropTypes.func.isRequired,\n  forms: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  forms: state.forms,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getCompanyForms\n})(CompanyForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyForm\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/form/CompanyForm.js"],"names":["React","useEffect","PropTypes","connect","getCompanyForms","Link","CompanyForms","Spinner","CompanyForm","auth","forms","loading","match","params","company","user","admins","includes","_id","formTable","length","map","form","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQL,EAAAA,eAAR;AAAyBM,EAAAA,KAAK,EAAE;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAhC;AAAoDC,EAAAA;AAApD,CAAD,KAAiE;AAAA;;AACnFX,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAf;AACD,GAFQ,EAEN,CAACV,eAAD,EAAkBQ,KAAlB,CAFM,CAAT;AAIA,SAAOD,OAAO,IAAI,CAACD,KAAZ,IAAqB,CAACD,IAAI,CAACM,IAA3B,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACGL,KAAK,CAACM,MAAN,IAAgBN,KAAK,CAACM,MAAN,CAAaC,QAAb,CAAsBR,IAAI,CAACM,IAAL,CAAUG,GAAhC,CAAhB,gBACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,qBAAoBN,KAAK,CAACC,MAAN,CAAaC,OAAQ,EAApD;AAAuD,QAAA,SAAS,EAAC,iBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC;AAAA;AAAA;AAAA;AAAA,YARJ,eAUE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,CAACJ,KAAK,CAACS,SAAP,IAAoBT,KAAK,CAACS,SAAN,CAAgBC,MAAhB,GAAyB,CAA7C,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAGCV,KAAK,CAACS,SAAN,CAAgBE,GAAhB,CAAqBC,IAAD,iBAClB,QAAC,YAAD;AAEE,QAAA,SAAS,EAAEA,IAFb;AAGE,QAAA,OAAO,EAAEV,KAAK,CAACC,MAAN,CAAaC,OAHxB;AAIE,QAAA,MAAM,EAAEJ,KAAK,CAACM,MAJhB;AAKE,QAAA,IAAI,EAAEN,KAAK,CAACI;AALd,SACOQ,IAAI,CAACJ,GADZ;AAAA;AAAA;AAAA;AAAA,cADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AA+BD,CApCD;;GAAMV,W;;KAAAA,W;AAsCNA,WAAW,CAACe,SAAZ,GAAwB;AACtBnB,EAAAA,eAAe,EAAEF,SAAS,CAACsB,IAAV,CAAeC,UADV;AAEtBf,EAAAA,KAAK,EAAER,SAAS,CAACwB,MAAV,CAAiBD,UAFF;AAGtBhB,EAAAA,IAAI,EAAEP,SAAS,CAACwB,MAAV,CAAiBD;AAHD,CAAxB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClClB,EAAAA,KAAK,EAAEkB,KAAK,CAAClB,KADqB;AAElCD,EAAAA,IAAI,EAAEmB,KAAK,CAACnB;AAFsB,CAAZ,CAAxB;;AAKA,eAAeN,OAAO,CAACwB,eAAD,EAAkB;AAAEvB,EAAAA;AAAF,CAAlB,CAAP,CAA8CI,WAA9C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCompanyForms } from '../../actions/form';\r\nimport { Link } from 'react-router-dom';\r\nimport CompanyForms from './CompanyForms';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst CompanyForm = ({ auth, getCompanyForms, forms: { forms, loading }, match }) => {\r\n  useEffect(() => {\r\n    getCompanyForms(match.params.company);\r\n  }, [getCompanyForms, match]);\r\n\r\n  return loading || !forms || !auth.user ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div className=\"paddingSection\">\r\n      {forms.admins && forms.admins.includes(auth.user._id) ? (\r\n        <div className=\"mobile-center\">\r\n          <Link to={`/api/forms/create/${match.params.company}`} className=\"btn btn-primary\">\r\n            Create new form\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className=\"marginTop-2\">\r\n        <h2>Actually forms:</h2>\r\n        {!forms.formTable || forms.formTable.length < 1 ? (\r\n          <h2>No forms available</h2>\r\n        ) : (\r\n          forms.formTable.map((form) => (\r\n            <CompanyForms\r\n              key={form._id}\r\n              formTable={form}\r\n              company={match.params.company}\r\n              admins={forms.admins}\r\n              name={forms.company}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCompanyForm.propTypes = {\r\n  getCompanyForms: PropTypes.func.isRequired,\r\n  forms: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  forms: state.forms,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCompanyForms })(CompanyForm);\r\n"]},"metadata":{},"sourceType":"module"}