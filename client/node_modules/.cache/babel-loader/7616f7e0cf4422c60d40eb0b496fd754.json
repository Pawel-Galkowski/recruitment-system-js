{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\routing\\\\AdminRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminRoute = ({\n  component: Component,\n  auth: {\n    isAuthenticated,\n    loading,\n    isAdmin\n  },\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => !isAuthenticated && !loading && !isAdmin ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 68\n  }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 95\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = AdminRoute;\nAdminRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(AdminRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/routing/AdminRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","AdminRoute","component","Component","auth","isAuthenticated","loading","isAdmin","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,GAA9B;AAAqE,KAAGC;AAAxE,CAAD,kBACjB,QAAC,KAAD,OACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IAAY,CAACJ,eAAD,IAAoB,CAACC,OAArB,IAAgC,CAACC,OAAjC,gBAA2C,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAA3C,gBAAsE,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AAF5F;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMR,U;AAONA,UAAU,CAACS,SAAX,GAAuB;AACrBN,EAAAA,IAAI,EAAEL,SAAS,CAACY,MAAV,CAAiBC;AADF,CAAvB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACa,eAAD,CAAP,CAAyBZ,UAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AdminRoute = ({ component: Component, auth: { isAuthenticated, loading, isAdmin }, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => (!isAuthenticated && !loading && !isAdmin ? <Redirect to=\"/login\" /> : <Component {...props} />)}\r\n  />\r\n);\r\n\r\nAdminRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AdminRoute);\r\n"]},"metadata":{},"sourceType":"module"}