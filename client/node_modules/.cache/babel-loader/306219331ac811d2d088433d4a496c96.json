{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\form\\\\CreateForm.js\";\nimport React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { addCompanyForm } from \"../../actions/form\";\n\nconst CreateForm = ({\n  addCompanyForm,\n  match\n}) => {\n  var [formData, setFormData] = useState([]);\n  var [newData, setData] = useState({\n    title: \"\",\n    skills: \"\",\n    body: \"\",\n    question: \"\"\n  });\n\n  const onSubmit = () => {\n    if (formData < 1) {\n      alert(\"You need to add at least one question\");\n    } else {\n      let fullObject = {\n        questions: formData,\n        body: {\n          title: newData.title,\n          skills: newData.skills,\n          body: newData.body\n        }\n      };\n      addCompanyForm(match.params.company, fullObject);\n    }\n  };\n\n  const removeInput = ind => {\n    formData.splice(ind, 1);\n    setFormData([...formData]);\n  };\n\n  const {\n    title,\n    skills,\n    body,\n    question\n  } = newData;\n\n  const onChange = e => setData({ ...newData,\n    [e.target.name]: e.target.value\n  }); //sprawdz czy mozna wyslac do bazy\n\n\n  const generateFormObject = () => {\n    if (newData !== \"\") {\n      setFormData([newData.question, ...formData]);\n      setData({\n        title: newData.title,\n        skills: newData.skills,\n        body: newData.body,\n        question: \"\"\n      });\n    }\n  };\n\n  const company = match.params.company;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"paddingSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/api/forms/${company}`,\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Back to forms\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marginTop-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Create new form\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    id: \"createCompanyForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Post informations\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Title of post\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"inputMargin\",\n    name: \"title\",\n    value: title,\n    placeholder: \"Title of post\",\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Skills (write with \\\",\\\")\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"inputMargin\",\n    name: \"skills\",\n    value: skills,\n    placeholder: \"Skills\",\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Your full informations about recrutiment\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    className: \"inputMargin\",\n    name: \"body\",\n    value: body,\n    placeholder: \"Your full informations about recrutiment\",\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Recruitment questions\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"question\",\n    value: question,\n    placeholder: \"Write new question\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success\",\n    onClick: e => generateFormObject(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"Add question\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"Added questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, formData && formData.map((el, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: `inp` + index,\n    className: \"boxed-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"inputBase\",\n    value: el,\n    placeholder: el.question,\n    name: index,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"trashBase\",\n    onClick: e => removeInput(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"paddingSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-dark margin-button\",\n    value: \"Submit\",\n    onClick: e => onSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nCreateForm.propTypes = {\n  addCompanyForm: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addCompanyForm\n})(withRouter(CreateForm));","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/form/CreateForm.js"],"names":["React","useState","Fragment","PropTypes","connect","Link","withRouter","addCompanyForm","CreateForm","match","formData","setFormData","newData","setData","title","skills","body","question","onSubmit","alert","fullObject","questions","params","company","removeInput","ind","splice","onChange","e","target","name","value","generateFormObject","map","el","index","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { addCompanyForm } from \"../../actions/form\";\r\n\r\nconst CreateForm = ({ addCompanyForm, match }) => {\r\n  var [formData, setFormData] = useState([]);\r\n  var [newData, setData] = useState({\r\n    title: \"\",\r\n    skills: \"\",\r\n    body: \"\",\r\n    question: \"\",\r\n  });\r\n\r\n  const onSubmit = () => {\r\n    if (formData < 1) {\r\n      alert(\"You need to add at least one question\");\r\n    } else {\r\n      let fullObject = {\r\n        questions: formData,\r\n        body: {\r\n          title: newData.title,\r\n          skills: newData.skills,\r\n          body: newData.body,\r\n        },\r\n      };\r\n      addCompanyForm(match.params.company, fullObject);\r\n    }\r\n  };\r\n\r\n  const removeInput = (ind) => {\r\n    formData.splice(ind, 1);\r\n    setFormData([...formData]);\r\n  };\r\n\r\n  const { title, skills, body, question } = newData;\r\n\r\n  const onChange = (e) =>\r\n    setData({\r\n      ...newData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  //sprawdz czy mozna wyslac do bazy\r\n\r\n  const generateFormObject = () => {\r\n    if (newData !== \"\") {\r\n      setFormData([newData.question, ...formData]);\r\n      setData({\r\n        title: newData.title,\r\n        skills: newData.skills,\r\n        body: newData.body,\r\n        question: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const company = match.params.company;\r\n\r\n  return (\r\n    <div className=\"paddingSection\">\r\n      <Link to={`/api/forms/${company}`} className=\"btn btn-light\">\r\n        Back to forms\r\n      </Link>\r\n      <div className=\"marginTop-2\">\r\n        <h1>Create new form</h1>\r\n        <div className=\"form-box\">\r\n          <form className=\"form\" id=\"createCompanyForm\">\r\n            <div className=\"boxed\">\r\n              <h2>Post informations</h2>\r\n              <label>Title of post</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"inputMargin\"\r\n                name=\"title\"\r\n                value={title}\r\n                placeholder=\"Title of post\"\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <label>Skills (write with \",\")</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"inputMargin\"\r\n                name=\"skills\"\r\n                value={skills}\r\n                placeholder=\"Skills\"\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <label>Your full informations about recrutiment</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"inputMargin\"\r\n                name=\"body\"\r\n                value={body}\r\n                placeholder=\"Your full informations about recrutiment\"\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"boxed\">\r\n              <label>Recruitment questions</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"question\"\r\n                value={question}\r\n                placeholder=\"Write new question\"\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                onClick={(e) => generateFormObject()}\r\n              >\r\n                Add question\r\n              </button>\r\n            </div>\r\n            <div id=\"Added questions\">\r\n              {formData &&\r\n                formData.map((el, index) => (\r\n                  <Fragment key={index}>\r\n                    <div id={`inp` + index} className=\"boxed-box\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"inputBase\"\r\n                        value={el}\r\n                        placeholder={el.question}\r\n                        name={index}\r\n                        readOnly\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"trashBase\"\r\n                        onClick={(e) => removeInput(index)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </Fragment>\r\n                ))}\r\n            </div>\r\n            <div className=\"paddingSection\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-dark margin-button\"\r\n                value=\"Submit\"\r\n                onClick={(e) => onSubmit()}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCreateForm.propTypes = {\r\n  addCompanyForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addCompanyForm })(withRouter(CreateForm));\r\n"]},"metadata":{},"sourceType":"module"}