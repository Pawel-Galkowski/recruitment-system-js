{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\form\\\\FormResponses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from './../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport { getForm } from '../../actions/form';\nimport { getProfiles } from '../../actions/profile';\nimport FormResponse from './FormResponse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormResponses = ({\n  auth: {\n    loading\n  },\n  getForm,\n  getProfiles,\n  profile: {\n    profiles\n  },\n  forms: {\n    form\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getForm(match.params.company, match.params.id);\n    getProfiles();\n  }, [getForm, match, getProfiles]);\n  const company = match.params.company;\n  return loading || !form ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paddingSection\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/api/forms/${company}`,\n      className: \"btn btn-light\",\n      children: \"Back to forms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marginTop-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Responses to form \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sectionLeftPadding\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: form.questions && form.questions.map((ask, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: ask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sectionLeftPadding\",\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Responses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), form.responses && form.responses.length > 0 ? form.responses.map(form => /*#__PURE__*/_jsxDEV(FormResponse, {\n          form: form,\n          match: match,\n          profile: profiles\n        }, form._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 42\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No responses available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormResponses, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = FormResponses;\nFormResponses.propTypes = {\n  getForm: PropTypes.func.isRequired,\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  forms: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  forms: state.forms,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getForm,\n  getProfiles\n})(FormResponses);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormResponses\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/form/FormResponses.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","Link","getForm","getProfiles","FormResponse","FormResponses","auth","loading","profile","profiles","forms","form","match","params","company","id","questions","map","ask","index","responses","length","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from './../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport { getForm } from '../../actions/form';\r\nimport { getProfiles } from '../../actions/profile';\r\nimport FormResponse from './FormResponse';\r\n\r\nconst FormResponses = ({ auth: { loading }, getForm, getProfiles, profile: { profiles }, forms: { form }, match }) => {\r\n  useEffect(() => {\r\n    getForm(match.params.company, match.params.id);\r\n    getProfiles();\r\n  }, [getForm, match, getProfiles]);\r\n\r\n  const company = match.params.company;\r\n\r\n  return loading || !form ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div className=\"paddingSection\">\r\n      <Link to={`/api/forms/${company}`} className=\"btn btn-light\">\r\n        Back to forms\r\n      </Link>\r\n      <div className=\"marginTop-2\">\r\n        <h1>Responses to form </h1>\r\n        <div>\r\n          <hr />\r\n          <br />\r\n          <h2>Questions:</h2>\r\n          <div className=\"sectionLeftPadding\">\r\n            <ol>\r\n              {form.questions &&\r\n                form.questions.map((ask, index) => (\r\n                  <Fragment key={index}>\r\n                    <li>{ask}</li>\r\n                  </Fragment>\r\n                ))}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n        <div className=\"sectionLeftPadding\">\r\n          <hr />\r\n          <br />\r\n          <h2>Responses:</h2>\r\n          {form.responses && form.responses.length > 0 ? (\r\n            form.responses.map((form) => <FormResponse key={form._id} form={form} match={match} profile={profiles} />)\r\n          ) : (\r\n            <h3>No responses available</h3>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFormResponses.propTypes = {\r\n  getForm: PropTypes.func.isRequired,\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  forms: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  forms: state.forms,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getForm, getProfiles })(FormResponses);\r\n"]},"metadata":{},"sourceType":"module"}