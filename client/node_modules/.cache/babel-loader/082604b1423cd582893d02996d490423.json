{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\forms\\\\Forms.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getCompanies } from \"../../actions/form\";\nimport CompanyItem from \"./CompanyItem\";\nimport CreateCompany from \"./CreateCompany\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forms = ({\n  getCompanies,\n  forms: {\n    forms,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCompanies();\n  }, [getCompanies]);\n  return loading || !forms ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paddingSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \" Welcome to the companies section\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateCompany, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"formsMainText\",\n        children: \"All actually registered companies:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forms\",\n        children: !forms || !forms.length >= 1 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No companies available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this) : forms.map(form => /*#__PURE__*/_jsxDEV(CompanyItem, {\n          forms: form\n        }, form._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Forms, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Forms;\nForms.propTypes = {\n  getCompanies: PropTypes.func.isRequired,\n  forms: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  forms: state.forms\n});\n\nexport default connect(mapStateToProps, {\n  getCompanies\n})(Forms);\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/forms/Forms.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getCompanies","CompanyItem","CreateCompany","Forms","forms","loading","length","map","form","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEH,EAAAA,YAAF;AAAgBI,EAAAA,KAAK,EAAE;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAvB,CAAD,KAAiD;AAAA;;AAC7DT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,SAAOK,OAAO,IAAI,CAACD,KAAZ,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cALF,eAOE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACG,CAACA,KAAD,IAAU,CAACA,KAAK,CAACE,MAAP,IAAe,CAAzB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAGCF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBAAU,QAAC,WAAD;AAA4B,UAAA,KAAK,EAAEA;AAAnC,WAAkBA,IAAI,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA,gBAApB;AAJJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AAsBD,CA3BD;;GAAMN,K;;KAAAA,K;AA6BNA,KAAK,CAACO,SAAN,GAAkB;AAChBV,EAAAA,YAAY,EAAEH,SAAS,CAACc,IAAV,CAAeC,UADb;AAEhBR,EAAAA,KAAK,EAAEP,SAAS,CAACgB,MAAV,CAAiBD;AAFR,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,KAAK,EAAEW,KAAK,CAACX;AADqB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACgB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA2CG,KAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getCompanies } from \"../../actions/form\";\r\nimport CompanyItem from \"./CompanyItem\";\r\nimport CreateCompany from \"./CreateCompany\";\r\n\r\nconst Forms = ({ getCompanies, forms: { forms, loading } }) => {\r\n  useEffect(() => {\r\n    getCompanies();\r\n  }, [getCompanies]);\r\n\r\n  return loading || !forms ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className=\"paddingSection\">\r\n        <h1 className=\"large text-primary\">Companies</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Welcome to the companies section\r\n        </p>\r\n        <CreateCompany />\r\n\r\n        <h2 className=\"formsMainText\">All actually registered companies:</h2>\r\n        <div className=\"forms\">\r\n          {!forms || !forms.length>=1 ? (\r\n            <h2>No companies available</h2>\r\n          ) : (\r\n            forms.map((form) => <CompanyItem key={form._id} forms={form} />)\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nForms.propTypes = {\r\n  getCompanies: PropTypes.func.isRequired,\r\n  forms: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  forms: state.forms,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCompanies })(Forms);\r\n"]},"metadata":{},"sourceType":"module"}