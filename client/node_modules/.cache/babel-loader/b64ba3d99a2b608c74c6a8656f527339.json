{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\components\\\\form\\\\CreateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { addCompanyForm } from \"../../actions/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateForm = ({\n  addCompanyForm,\n  match\n}) => {\n  _s();\n\n  var [formData, setFormData] = useState([]);\n  var [newData, setData] = useState({\n    title: \"\",\n    skills: \"\",\n    body: \"\",\n    question: \"\"\n  });\n\n  const onSubmit = () => {\n    if (formData < 1) {\n      alert(\"You need to add at least one question\");\n    } else {\n      let fullObject = {\n        questions: formData,\n        body: {\n          title: newData.title,\n          skills: newData.skills,\n          body: newData.body\n        }\n      };\n      addCompanyForm(match.params.company, fullObject);\n    }\n  };\n\n  const removeInput = ind => {\n    formData.splice(ind, 1);\n    setFormData([...formData]);\n  };\n\n  const {\n    title,\n    skills,\n    body,\n    question\n  } = newData;\n\n  const onChange = e => setData({ ...newData,\n    [e.target.name]: e.target.value\n  }); //sprawdz czy mozna wyslac do bazy\n\n\n  const generateFormObject = () => {\n    if (newData !== \"\") {\n      setFormData([newData.question, ...formData]);\n      setData({\n        title: newData.title,\n        skills: newData.skills,\n        body: newData.body,\n        question: \"\"\n      });\n    }\n  };\n\n  const company = match.params.company;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paddingSection\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/api/forms/${company}`,\n      className: \"btn btn-light\",\n      children: \"Back to forms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marginTop-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create new form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-box\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          id: \"createCompanyForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxed\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Post informations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title of post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"inputMargin\",\n              name: \"title\",\n              value: title,\n              placeholder: \"Title of post\",\n              onChange: e => onChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Skills (write with \\\",\\\")\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"inputMargin\",\n              name: \"skills\",\n              value: skills,\n              placeholder: \"Skills\",\n              onChange: e => onChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Your full informations about recrutiment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              className: \"inputMargin\",\n              name: \"body\",\n              value: body,\n              placeholder: \"Your full informations about recrutiment\",\n              onChange: e => onChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxed\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Recruitment questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"question\",\n              value: question,\n              placeholder: \"Write new question\",\n              onChange: e => onChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              onClick: e => generateFormObject(),\n              children: \"Add question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Added questions\",\n            children: formData && formData.map((el, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: `inp` + index,\n                className: \"boxed-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"inputBase\",\n                  value: el,\n                  placeholder: el.question,\n                  name: index,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"trashBase\",\n                  onClick: e => removeInput(index),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paddingSection\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"btn btn-dark margin-button\",\n              value: \"Submit\",\n              onClick: e => onSubmit()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateForm, \"NoZzm0Z/2smAbGd2Cjw5EdGl0BE=\");\n\n_c = CreateForm;\nCreateForm.propTypes = {\n  addCompanyForm: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addCompanyForm\n})(withRouter(CreateForm));\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/components/form/CreateForm.js"],"names":["React","useState","Fragment","PropTypes","connect","Link","withRouter","addCompanyForm","CreateForm","match","formData","setFormData","newData","setData","title","skills","body","question","onSubmit","alert","fullObject","questions","params","company","removeInput","ind","splice","onChange","e","target","name","value","generateFormObject","map","el","index","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { addCompanyForm } from \"../../actions/form\";\r\n\r\nconst CreateForm = ({ addCompanyForm, match }) => {\r\n  var [formData, setFormData] = useState([]);\r\n  var [newData, setData] = useState({\r\n    title: \"\",\r\n    skills: \"\",\r\n    body: \"\",\r\n    question: \"\",\r\n  });\r\n\r\n  const onSubmit = () => {\r\n    if (formData < 1) {\r\n      alert(\"You need to add at least one question\");\r\n    } else {\r\n      let fullObject = {\r\n        questions: formData,\r\n        body: {\r\n          title: newData.title,\r\n          skills: newData.skills,\r\n          body: newData.body,\r\n        },\r\n      };\r\n      addCompanyForm(match.params.company, fullObject);\r\n    }\r\n  };\r\n\r\n  const removeInput = (ind) => {\r\n    formData.splice(ind, 1);\r\n    setFormData([...formData]);\r\n  };\r\n\r\n  const { title, skills, body, question } = newData;\r\n\r\n  const onChange = (e) =>\r\n    setData({\r\n      ...newData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  //sprawdz czy mozna wyslac do bazy\r\n\r\n  const generateFormObject = () => {\r\n    if (newData !== \"\") {\r\n      setFormData([newData.question, ...formData]);\r\n      setData({\r\n        title: newData.title,\r\n        skills: newData.skills,\r\n        body: newData.body,\r\n        question: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const company = match.params.company;\r\n\r\n  return (\r\n    <div className=\"paddingSection\">\r\n      <Link to={`/api/forms/${company}`} className=\"btn btn-light\">\r\n        Back to forms\r\n      </Link>\r\n      <div className=\"marginTop-2\">\r\n        <h1>Create new form</h1>\r\n        <div className=\"form-box\">\r\n          <form className=\"form\" id=\"createCompanyForm\">\r\n            <div className=\"boxed\">\r\n              <h2>Post informations</h2>\r\n              <label>Title of post</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"inputMargin\"\r\n                name=\"title\"\r\n                value={title}\r\n                placeholder=\"Title of post\"\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <label>Skills (write with \",\")</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"inputMargin\"\r\n                name=\"skills\"\r\n                value={skills}\r\n                placeholder=\"Skills\"\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n              <label>Your full informations about recrutiment</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"inputMargin\"\r\n                name=\"body\"\r\n                value={body}\r\n                placeholder=\"Your full informations about recrutiment\"\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"boxed\">\r\n              <label>Recruitment questions</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"question\"\r\n                value={question}\r\n                placeholder=\"Write new question\"\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                onClick={(e) => generateFormObject()}\r\n              >\r\n                Add question\r\n              </button>\r\n            </div>\r\n            <div id=\"Added questions\">\r\n              {formData &&\r\n                formData.map((el, index) => (\r\n                  <Fragment key={index}>\r\n                    <div id={`inp` + index} className=\"boxed-box\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"inputBase\"\r\n                        value={el}\r\n                        placeholder={el.question}\r\n                        name={index}\r\n                        readOnly\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"trashBase\"\r\n                        onClick={(e) => removeInput(index)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </Fragment>\r\n                ))}\r\n            </div>\r\n            <div className=\"paddingSection\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-dark margin-button\"\r\n                value=\"Submit\"\r\n                onClick={(e) => onSubmit()}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCreateForm.propTypes = {\r\n  addCompanyForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addCompanyForm })(withRouter(CreateForm));\r\n"]},"metadata":{},"sourceType":"module"}