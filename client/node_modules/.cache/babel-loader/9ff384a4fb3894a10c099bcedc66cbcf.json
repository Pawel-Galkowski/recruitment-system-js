{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\System-Rekrutacyjny\\\\client\\\\src\\\\pages\\\\form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport { getForm, addResponseToForm } from '../../actions/form';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forms = ({\n  auth,\n  getForm,\n  addResponseToForm,\n  forms: {\n    form,\n    loading\n  },\n  history,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getForm(match.params.company, match.params.id);\n  }, [getForm, match]);\n  const company = match.params.company;\n  const [answer, setAnswer] = useState('');\n  const [fileData, setFileData] = useState('');\n  const [formData, setFormData] = useState([]);\n\n  const onChange = e => {\n    setAnswer({ ...answer,\n      [e.target.name]: e.target.value\n    });\n    setFormData([answer, ...formData]);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setFormData([answer, ...formData]);\n    let arr = Object.values(answer);\n    addResponseToForm(company, match.params.id, arr, fileData, history);\n  };\n\n  const [file, setFile] = useState();\n\n  const chceckType = name => {\n    let goodFile = false;\n    let afterDot = name.split('.').pop();\n\n    switch (afterDot.toLowerCase()) {\n      case 'pdf':\n        goodFile = true;\n        break;\n\n      case 'docx':\n        goodFile = true;\n        break;\n\n      default:\n        goodFile = false;\n    }\n\n    return goodFile;\n  };\n\n  const handleFile = elem => {\n    if (elem.target.files[0]) {\n      const isGood = chceckType(elem.target.files[0].name);\n\n      if (isGood) {\n        setFile(elem.target.files[0]);\n      } else {\n        alert('Wrong file format. File will not be added!. \\nAvailable formats: PDF, DOCX');\n      }\n    }\n  };\n\n  const uploadFile = async e => {\n    if (file) {\n      const isGood = chceckType(file.name);\n\n      if (isGood) {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('user', auth.user._id);\n\n        try {\n          const res = await axios.post(`/uploads/${company}/${auth.user._id}`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          const {\n            filePath\n          } = res.data;\n          setFileData(filePath);\n        } catch (err) {\n          if (err.response.status === 500) {\n            console.log('There was a problem with the server');\n          } else {\n            console.log('File with that name exist');\n          }\n        }\n      } else {\n        alert('Not valid file');\n      }\n    }\n  };\n\n  return loading || !form ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paddingSection\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/api/forms/${company}`,\n      className: \"btn btn-light\",\n      children: \"Back to forms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marginTop-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Form Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: onSubmit,\n        children: [form.questions.map((el, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: el,\n              name: index,\n              required: true,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-file\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"custom-file-input\",\n            id: \"customFile\",\n            onChange: e => handleFile(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), fileData ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"File added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-light\",\n            onClick: e => uploadFile(e),\n            children: \"Upload file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Forms, \"COrO8d3lQwqi8UEUy+eBqmLtGJw=\");\n\n_c = Forms;\nForms.propTypes = {\n  getForm: PropTypes.func.isRequired,\n  addResponseToForm: PropTypes.func.isRequired,\n  forms: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  forms: state.forms,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getForm,\n  addResponseToForm\n})(withRouter(Forms));\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/System-Rekrutacyjny/client/src/pages/form/Form.js"],"names":["React","Fragment","useEffect","useState","PropTypes","connect","Link","Spinner","withRouter","getForm","addResponseToForm","axios","Forms","auth","forms","form","loading","history","match","params","company","id","answer","setAnswer","fileData","setFileData","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","arr","Object","values","file","setFile","chceckType","goodFile","afterDot","split","pop","toLowerCase","handleFile","elem","files","isGood","alert","uploadFile","FormData","append","user","_id","res","post","headers","filePath","data","err","response","status","console","log","questions","map","el","index","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getForm, addResponseToForm } from '../../actions/form';\r\nimport axios from 'axios';\r\n\r\nconst Forms = ({ auth, getForm, addResponseToForm, forms: { form, loading }, history, match }) => {\r\n  useEffect(() => {\r\n    getForm(match.params.company, match.params.id);\r\n  }, [getForm, match]);\r\n\r\n  const company = match.params.company;\r\n\r\n  const [answer, setAnswer] = useState('');\r\n  const [fileData, setFileData] = useState('');\r\n  const [formData, setFormData] = useState([]);\r\n  const onChange = (e) => {\r\n    setAnswer({ ...answer, [e.target.name]: e.target.value });\r\n    setFormData([answer, ...formData]);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setFormData([answer, ...formData]);\r\n    let arr = Object.values(answer);\r\n    addResponseToForm(company, match.params.id, arr, fileData, history);\r\n  };\r\n\r\n  const [file, setFile] = useState();\r\n\r\n  const chceckType = (name) => {\r\n    let goodFile = false;\r\n    let afterDot = name.split('.').pop();\r\n    switch (afterDot.toLowerCase()) {\r\n      case 'pdf':\r\n        goodFile = true;\r\n        break;\r\n      case 'docx':\r\n        goodFile = true;\r\n        break;\r\n      default:\r\n        goodFile = false;\r\n    }\r\n    return goodFile;\r\n  };\r\n\r\n  const handleFile = (elem) => {\r\n    if (elem.target.files[0]) {\r\n      const isGood = chceckType(elem.target.files[0].name);\r\n      if (isGood) {\r\n        setFile(elem.target.files[0]);\r\n      } else {\r\n        alert('Wrong file format. File will not be added!. \\nAvailable formats: PDF, DOCX');\r\n      }\r\n    }\r\n  };\r\n\r\n  const uploadFile = async (e) => {\r\n    if (file) {\r\n      const isGood = chceckType(file.name);\r\n      if (isGood) {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('user', auth.user._id);\r\n        try {\r\n          const res = await axios.post(`/uploads/${company}/${auth.user._id}`, formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n          const { filePath } = res.data;\r\n          setFileData(filePath);\r\n        } catch (err) {\r\n          if (err.response.status === 500) {\r\n            console.log('There was a problem with the server');\r\n          } else {\r\n            console.log('File with that name exist');\r\n          }\r\n        }\r\n      } else {\r\n        alert('Not valid file');\r\n      }\r\n    }\r\n  };\r\n\r\n  return loading || !form ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div className=\"paddingSection\">\r\n      <Link to={`/api/forms/${company}`} className=\"btn btn-light\">\r\n        Back to forms\r\n      </Link>\r\n      <div className=\"marginTop-2\">\r\n        <h1 className=\"large text-primary\">Form Questions</h1>\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n          {form.questions.map((el, index) => (\r\n            <Fragment key={index}>\r\n              <div className=\"form-group\">\r\n                <label>{el}</label>\r\n                <input type=\"text\" placeholder={el} name={index} required onChange={onChange} />\r\n              </div>\r\n            </Fragment>\r\n          ))}\r\n          <div className=\"custom-file\">\r\n            <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" onChange={(e) => handleFile(e)} />\r\n            {fileData ? <span>File added</span> : null}\r\n            <br />\r\n            <button type=\"button\" className=\"btn btn-light\" onClick={(e) => uploadFile(e)}>\r\n              Upload file\r\n            </button>\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nForms.propTypes = {\r\n  getForm: PropTypes.func.isRequired,\r\n  addResponseToForm: PropTypes.func.isRequired,\r\n  forms: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  forms: state.forms,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getForm, addResponseToForm })(withRouter(Forms));\r\n"]},"metadata":{},"sourceType":"module"}